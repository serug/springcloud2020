<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>top.serug.springcloud</groupId>
    <artifactId>springcloud2020</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>springcloud2020</name>
    <description>springcloud2020 practice</description>

    <modules>
        <module>spring-cloud-basic</module>
        <module>spring-cloud-model</module>
        <module>cloud-eureka-server-7001</module>
        <module>cloud-eureka-server-7002</module>
        <module>cloud-eureka-server-7003</module>
        <module>cloud-consumer-order-80</module>
        <module>cloud-consumer-order-zk-80</module>
        <module>cloud-consumer-order-consul-80</module>
        <module>cloud-consumer-order-feign-80</module>
        <module>cloud-provider-payment-8001</module>
        <module>cloud-provider-payment-8002</module>
        <module>cloud-provider-payment-zk-8004</module>
        <module>cloud-provider-payment-consul-8006</module>
        <module>zookeeper-practice-project</module>
        <module>cloud-provider-payment-hystrix-8003</module>
        <module>cloud-consumer-order-feign-hystrix-80</module>
        <module>cloud-dashboard-hystrix-9001</module>
        <module>cloud-gateway-9527</module>
        <module>cloud-config-server-3344</module>
        <module>cloud-config-client-3355</module>
        <module>cloud-config-client-3366</module>
        <module>cloud-stream-rabbitmq-provider-8801</module>
        <module>cloud-stream-rabbitmq-consumer-8802</module>
        <module>cloud-stream-rabbitmq-consumer-8803</module>
        <module>cloudalibaba-provider-payment-nacos-9001</module>
        <module>cloudalibaba-provider-payment-nacos-9002</module>
        <module>cloudalibaba-consumer-order-nacos-83</module>
    </modules>


    <!--统一管理jar包版本-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <lombok.version>1.18.8</lombok.version>
        <mysql.version>8.0.17</mysql.version>
        <druid.version>1.1.16</druid.version>
        <mybatis.spring.boot.version>2.1.1</mybatis.spring.boot.version>
        <spring.boot.dependencies.version>2.2.2.RELEASE</spring.boot.dependencies.version>
        <spring.cloud.dependencies.version>Hoxton.SR1</spring.cloud.dependencies.version>
        <spring.cloud.alibaba.dependencies.version>2.1.0.RELEASE</spring.cloud.alibaba.dependencies.version>
        <spring.boot.devtools.version>2.1.7.RELEASE</spring.boot.devtools.version>
        <spring.boot.test.version>2.2.0.RELEASE</spring.boot.test.version>
        <hutool.version>5.1.0</hutool.version>
    </properties>

    <!--子模块继承之后，提供作用：锁定版本+子model不用写groupId和version；
    dependencyManagement只是声明依赖，并不引入jar包，因此子项目需要声明需要用的依赖；
    只有子项目中国写了该依赖项，并没有指定具体版本才会从父项目中继承该项，病区version和scope都读取父pom的；
    如果子项目中有声明version，使用子项目的
    -->
    <dependencyManagement>
        <dependencies>
            <!-- springboot 2.2.2.RELEASE -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--springcloud Hoxton.SR1-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--springcloud alibaba 2.1.0.RELEASE-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--mybatis-spring-boot-starter-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>

            <!--druid数据源-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--mysql-connector-java-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- hutool 工具包 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!--junit-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <!-- 热部署 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${spring.boot.devtools.version}</version>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.test.version}</version>
            </dependency>



        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
